version: '3'
services:
  postgres:
    image: 'postgres:latest' # We do not use any advanced PostgreSQL options so we can use the latest version.
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      # changed to avoid EACCES: permission denied, mkdir '/app/node_modules/.cache' error (https://www.udemy.com/course/docker-and-kubernetes-the-complete-guide/learn/lecture/11437304#questions/14297316)
      - /home/node/app/node_modules
      - ./client:/home/node/app
      # before:
      # - /app/node_modules
      # - ./client:/app
    # added to avoid "WebSocket connection to 'ws://localhost:3000/ws' failed:" error (https://www.udemy.com/course/docker-and-kubernetes-the-complete-guide/learn/lecture/31725284#overview)
    environment:
      - WDS_SOCKET_PORT=0
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
